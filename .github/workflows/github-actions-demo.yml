on:
  # Run on pull request, so that the PR can be analyzed.
  pull_request:

  # Run on merge to the base branch, so that the baseline
  # AppMap archive can be brought up-to-date.
  # If your base branch is not 'main', (e.g. 'master', 'develop'),
  # change this accordingly.
  push:
    branches:
      - main

  # Run weekly, so that the baseline AppMap artifact does not expire.
  schedule:
    - cron: '0 0 * * 0'

permissions:
  # Read the baseline artifact in order to perform
  # the AppMap comparison.
  actions: read

  # Commit the AppMap configuration.
  # If the EndBug/add-and-commit is removed,
  # this can be changed to 'read'.
  contents: write

  # Add check annotations to the source code when
  # a problem is detected.
  checks: write

  # Add a comment to the pull request.
  pull-requests: write

services:
  postgres:
    image: postgres:12.2
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - 5432:5432
    options:
      --health-cmd pg_isready
      --health-interval 10s
      --health-timeout 5s
      --health-retries 5

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.0.0

      - name: Run tests
        env:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          RUBYOPT: "-W:no-deprecated -W:no-experimental"
        run: bundle exec rails test

      - name: Archive AppMaps
        uses: getappmap/archive-action@v1
        with:
          revision: ${{ github.event.pull_request.base.sha }}
